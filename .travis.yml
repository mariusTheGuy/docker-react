language: generic

# tell 'travis' we need a copy of docker running
sudo: required
services:
  - docker

# commands that execute before our tests are run
# build our image using 'Dockerfile'.dev
before_install:
  - docker build -t cviejo18/docker-react -f Dockerfile.dev .

# tell 'travis' how to run our test suite
script:
  # - docker run -e CI=true cviejo18/docker-react npm run test -- --coverage
  - docker run -e CI=true cviejo18/docker-react npm run test
  # You can read up on the CI=true variable here:
  # https://facebook.github.io/create-react-app/docs/running-tests#linux-macos-bash
  # and environment variables in Docker here:
  # https://docs.docker.com/engine/reference/run/#env-environment-variables

# this fragment should be included when we have AWS ready to
# receive our deploy
deploy:
  provider: elasticbeanstalk
  # we extract the region from the link generated in AWS > elastic beanstalk instance:
  # Dockerreact-env.eba-4wjj8p4k.us-east-2.elasticbeanstalk.com
  region: us-east-2
  # the name we used in the AWS > elastic beanstalk instance creation
  app: "docker-react"
  # the environtment name generated from AWS > elastic beanstalk instance
  env: "Dockerreact-env"
  # AWS > search 's3' bucket > elasticbeanstalk-us-east-2-700014740564
  bucket_name: elasticbeanstalk-us-east-2-700014740564
  # the name we used in the AWS > elastic beanstalk instance creation
  bucket_path: "docker-react"
  # any time we push new code to the 'master' branch then deploy
  on:
    branch: master
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
